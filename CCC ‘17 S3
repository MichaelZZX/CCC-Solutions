import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Nail {
	public static void main(String[] args) {
BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		
		try {
			int n = Integer.parseInt(in.readLine());
      // the array "half" is for saving the number of boards with a certain height, eg: half[3]=4 means there are 4 boards with height 3.
			int [] half = new int [2000];
			String [] t = in.readLine().split(" ");
			
			for(int i = 0 ; i < n; i ++) {
				half[Integer.parseInt(t[i])-1] ++;
			}
			
			int [] info = new int[3999];
			// consider i as the height of the first board, j as the height of the second board
			for(int i =0; i < 2000; i ++) {
        // for any even target heights, the number of conbinations should start with the number of half boards times 2. 
        // eg: info[8] = half[4]/2  for example, we have 6 boards with height 4, they can make up 2 fences with height 8
				info[2*i]+= half[i]/2;
				for(int j =i+1; j < 2000; j ++) {
					info[i+j]+= Math.min(half[i], half[j]);
				}
			}
			int heights=0;
			int width=0; 
			for(int i = 0 ; i < 3999; i ++) {
				if(info[i]!=0) {
				if(info[i]>width) {
					width = info[i];
					heights = 1;
				}else if (info[i]==width) {
					heights++;
				}
				}
			}
			
			System.out.println(width+ " " + (heights));
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
}
